'use strict';var _slicedToArray=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{!d&&h['return']&&h['return']()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}();Object.defineProperty(exports,'__esModule',{value:!0});exports.default=function(a){var b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:{},c=arguments[2];c=c instanceof Array&&2===c.length?c:[];var d=c,e=_slicedToArray(d,2),f=e[0],g=e[1];f='string'==typeof f||f instanceof String?f:'{',g='string'==typeof g||g instanceof String?g:'}',f=f.split('').map(function(a){return'\\'+a}).join(''),g=g.split('').map(function(a){return'\\'+a}).join('');var h='string'==typeof a||a instanceof String?a:'';return Object.keys(b).reduce(function(a,c){var d=new RegExp(''+f+c+g);return a.replace(d,b[c])},h)};
//# sourceMappingURL=fill.js.map
